// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using storegit.Models;
using System;

namespace storegit.Migrations
{
    [DbContext(typeof(shopeContext))]
    [Migration("20181219175105_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("storegit.Models.Adress", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityAddress");

                    b.Property<string>("HomeAdress");

                    b.Property<int>("HomeNamber");

                    b.HasKey("id");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("storegit.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Adressid");

                    b.Property<string>("email");

                    b.Property<string>("name");

                    b.Property<int>("phone");

                    b.HasKey("id");

                    b.HasIndex("Adressid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("storegit.Models.Users", b =>
                {
                    b.HasOne("storegit.Models.Adress", "Adress")
                        .WithMany()
                        .HasForeignKey("Adressid");
                });
#pragma warning restore 612, 618
        }
    }
}
